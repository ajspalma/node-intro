Node.JS (Server)

can be used in robotics and other fields 
-  http://johnny-five.io/ (robotics)

- runs with V8 engine
- node -v -> version
- node comes with something called GLOBAL (object)
- node comes with its own methods and properties that we use
- node can be use with/in anything (if not in the browser) without browser specific things
    - cannot use window/document object in the terminal (only for browsers)
- Some of Global/global object 
    - process (means what the computer is doing)
        - process.exit() - exits node

Lesson 1 

Running script.js in Node JS

$ node script.js
    - runs/evaluate the script.js (top to bottom)
    - exits with process.exit()

Lesson 2 - Modules
    - 'import' statement will not work without module bundler like webpack, etc
    - module is a global object

    Common JS way
        - 'require' is used instead of 'import'
            example.
                const largeNumber = require('./script2.js');
        - 'module.exports' instead of export default
            example 
                module.exports = {
                    largeNumber: largeNumber
                };

Lesson 3 - Kinds/Types of Modules in Node
- Built-in Modules (comes in Node by default)
    Some of the most used node modules are:
    - fs (File System module (read or write in file system)) 
        - const fs = require('fs');
    - http (module to create server)
        - const http = require('http');
- Came from NPM 
    - Node packages that came from the NPM repository
    example: 
        - nodemon - https://www.npmjs.com/package/nodemon
            - is a tool that helps develop node.js based applications by 
            automatically restarting the node application when file changes 
            in the directory are detected.

    - NPM init
        - run npm init to create a package.json file if not exist to install other node packages    
        - type -y flag to automatically answer yes in npm package initialization
            example: $ npm init -y

- Dev-dependencies 
    - node packages used in development enviroment using the --save-dev flag
        example: $ npm install nodemon --save-dev
            - it installs nodemon package under the devDependecies object on package.json

    - .bin (folder under node_modules)
        - packages inside here can be accessed and used directly in the terminal and 
            can be used in the commands inside scripts object in package.json
                example: 
                    "script": {
                        "start": "nodemon" // replaced with nodemon
                    }

Lesson 4 - Building a Server
    - Create a server using node built-in http module  

Lesson 5 - Express JS 
    - Creating a server with Express JS

Lesson 6 - Express Middlewares
    - Middleware - runs first before going through the specific route 
        - app.use((req, res, next) => {})

Lesson 7 - Postman
    - POST request 
        - to get the post data from form-data, x-wwww-form-urlencoded, raw (JSON), etc.
            Body-Parser package is needed
    - Body-Parser (https://www.npmjs.com/package/body-parser) 
        - grabs everything it receives like json or forms into something we can use 
        - to use it, place it to app.use middleware
                